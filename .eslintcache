[{"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\index.js":"1","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\reportWebVitals.js":"2","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\App.js":"3","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\index.js":"4","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\apiCall.js":"5","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Header.js":"6","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\SignUpAdmin.js":"7","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\model.js":"8","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Expertise.js":"9","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\AdminApplications.js":"10","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Authentication.js":"11","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationList.js":"12","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Actions\\testLogInLocalStorage.js":"13","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\UserReducer.js":"14","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\index.js":"15","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationElement.js":"16"},{"size":884,"mtime":1614093047200,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1613985020202,"results":"19","hashOfConfig":"18"},{"size":1601,"mtime":1614242397192,"results":"20","hashOfConfig":"18"},{"size":553,"mtime":1614093047194,"results":"21","hashOfConfig":"18"},{"size":419,"mtime":1614242405502,"results":"22","hashOfConfig":"18"},{"size":673,"mtime":1614093047198,"results":"23","hashOfConfig":"18"},{"size":2117,"mtime":1614077407880,"results":"24","hashOfConfig":"18"},{"size":987,"mtime":1613985020199,"results":"25","hashOfConfig":"18"},{"size":4804,"mtime":1614242405504,"results":"26","hashOfConfig":"18"},{"size":3920,"mtime":1614242397193,"results":"27","hashOfConfig":"18"},{"size":11994,"mtime":1614246602759,"results":"28","hashOfConfig":"18"},{"size":890,"mtime":1614093047197,"results":"29","hashOfConfig":"18"},{"size":563,"mtime":1614246339938,"results":"30","hashOfConfig":"18"},{"size":1600,"mtime":1614242405502,"results":"31","hashOfConfig":"18"},{"size":149,"mtime":1614093047194,"results":"32","hashOfConfig":"18"},{"size":1706,"mtime":1614242405503,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b2pc40",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\index.js",[],["71","72"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\reportWebVitals.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\App.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\index.js",["73"],"import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { AllReducers } from \"./Reducers\"\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, AllReducers)\r\n\r\n\r\nexport const ReduxStore = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const Persistor = persistStore(ReduxStore)\r\n","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\apiCall.js",["74"],"import axios from \"axios\";\r\n  export default class ApiCall{\r\n        constructor(){\r\n\r\n        }\r\n        \r\n        apiAxios() {\r\n          return axios.create({\r\n            baseURL: \"http://localhost:3001/\",\r\n            withCredentials: true,\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        }\r\n\r\n\r\n      }\r\n      ","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Header.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\SignUpAdmin.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\model.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Expertise.js",["75","76"],"import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Expertise({model, apiCall}) {\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n\r\n    useEffect(()=>{\r\n        if( (role !== \"client\") || (isLoggedIn === false) )\r\n            window.location = \"/\"\r\n    }, [isLoggedIn, role])\r\n    useEffect(()=>{\r\n        if( (role !== \"client\") || (isLoggedIn === false) )\r\n            window.location = \"/\"\r\n    }, [])\r\n\r\n    const [allExpertise, setExpertice] = useState(model.getAllExpertise());\r\n    useEffect(() => setExpertice(model.getAllExpertise()), []);\r\n\r\n    const [myExpertise, setMyExpertise] = useState(model.getExpertise());\r\n    useEffect(function () {\r\n        return model.addObserver(function () {\r\n            setMyExpertise(model.getExpertise());\r\n        })\r\n    }, [model]);\r\n\r\n    //Ta bort: Modellen bestämmer om den vill läsa från localstorage eller inte.......\r\n    useEffect(() => localStorage.setItem('formData', myExpertise));\r\n\r\n    //remove selected state when chosen?\r\n    const removeSelectedExpertise = e => {\r\n        const exp = allExpertise.filter(name => name !== e);\r\n        setExpertice(exp);\r\n    }\r\n    const instance = apiCall.apiAxios();\r\n    //TODO add user fname, lname, date of birth and start/end period to API call\r\n    return (\r\n        <div>\r\n            {((role === \"client\") && (isLoggedIn === true)) ?\r\n                <div>\r\n                <ExpertiseView myExpertise={myExpertise} removeExpertise={n => {\r\n                    model.removeExpertise(n);\r\n                    setExpertice([...allExpertise, n])\r\n                }}/>\r\n                <AddExpertiseForm expertise={allExpertise} addExpertise={(t, y) => model.addExpertise(t, y)}//TODO add fields: {fname: info.fname, lname: info.lname, dateOfBirth: info.dateOfBirth}\r\n                                  done={(info) => instance.post('posts',{\r\n                                      startPeriod: info.start,\r\n                                      endPeriod: info.end,\r\n                                      dateOfBirth: info.dateOfBirth,\r\n                                      status: \"unhandled\",\r\n                                      firstName: info.fname,\r\n                                      lastName: info.lname,\r\n                                      competence: myExpertise\r\n                                  })}\r\n                                  removeOption={(name) => removeSelectedExpertise(name)}\r\n                /></div>\r\n            :\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ExpertiseView = ({myExpertise, removeExpertise}) => (\r\n    <div>\r\n        {myExpertise.map(e => \r\n            <tbody>\r\n                <tr key={e.name + e.year}>\r\n                    <td>{e.name}</td>\r\n                    <td>{e.year}</td>\r\n                </tr>\r\n                <button onClick={() => removeExpertise(e.name)}>remove</button>\r\n            </tbody>\r\n            )}\r\n    </div>\r\n);\r\n\r\n\r\n\r\nconst AddExpertiseForm = ({expertise, addExpertise, done, removeOption}) => {\r\n\r\n    const userInfo = useSelector(state => state.UserReducer.userInfo)\r\n   console.log(userInfo)\r\n    const handleSubmit = () => {\r\n        let ans = window.confirm(\"Are you sure you want to submit your application?\");\r\n        if(ans === true){\r\n           //console.log(userInfo[0].dateOfBirth);\r\n           //debugger;\r\n            done({start: start, end: end, fname: userInfo[0].fname, lname: userInfo[0].lname, status: \"unhandled\", dateOfBirth:userInfo[0].dateOfBirth});\r\n        }\r\n    }\r\n\r\n    const [year, setYear] = useState(0);\r\n    const [type, setType] = useState('');\r\n    const [start, setStart] = useState(\"\");\r\n    const [end, setEnd] = useState(\"\");\r\n    return (\r\n        <div>\r\n            <input type=\"number\" min=\"0\" placeholder=\"years of experience\" onChange={(event) => setYear(event.target.value)} />\r\n            <select onChange={(event) => setType(event.target.value)}>\r\n                <option>choose your expertise</option>\r\n                {expertise.map((k) => <option key={k}>{k}</option>)}\r\n            </select>\r\n            <button onClick={() => {addExpertise(type, year); removeOption(type)}}>add skill to application</button>\r\n\r\n            <div>\r\n                <br/>\r\n                <input type=\"text\" min=\"0\" placeholder=\"available start period\" onChange={(event)=>{ setStart(event.target.value) }} />\r\n                <input type=\"text\" min=\"0\" placeholder=\"available end period\" onChange={(event)=>{ setEnd(event.target.value) }}/>\r\n                <button onClick={() => {handleSubmit();}}>confirm and send application</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {Expertise}; \r\n","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\AdminApplications.js",["77","78","79"],"import React, {useEffect, useState} from \"react\"\r\nimport {Field, Form, Formik, useField} from \"formik\";\r\nimport {Button, Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport ApplicationList from \"./ApplicationList\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminApplications = ({apiCall}) => {\r\n    const [result, setResult] = useState([])\r\n\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((role !== \"admin\") || (isLoggedIn === false))\r\n            window.location = \"/\"\r\n    }, [isLoggedIn, role])\r\n\r\n\r\n    const CustomCheckboxes = ({label, ...props}) => {\r\n        const [field] = useField(props);\r\n        return <FormControlLabel {...field} control={<Checkbox/>} label={label}/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(role === \"admin\") && (isLoggedIn === true)\r\n                ? <div>\r\n                    <Formik\r\n                        initialValues={{\r\n\r\n                            competences: []\r\n\r\n                        }}\r\n                        onSubmit={(data, {setSubmitting}) => {\r\n                            setSubmitting(true);\r\n                            let param = \"posts\"\r\n                            if (data.competences.length === 2) {\r\n                                param = \"posts/competence/or=\" + data.competences[0] + \"&=\" + data.competences[1];\r\n                            } else if (data.competences.length === 1) {\r\n                                param = \"posts/competence=\" + data.competences[0];\r\n                            }\r\n\r\n                            /*\r\n                            apiCall.apiCallGet(param)\r\n                                .then(response => (setSubmitting(false), setResult(response)))\r\n                                .catch(error => console.log(error))\r\n                                old url: baseURL: \"https://restapikth.herokuapp.com/\",\r\n                                local: baseURL: \"http://localhost:3001/\",\r\n\r\n                               header: 'Access-Control-Allow-Origin' : '*',\r\n                                    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                             */\r\n\r\n                            const instance = apiCall.apiAxios();\r\n                            instance.get(param).then(r =>( setSubmitting(false), setResult(r.data),setResult(r.data)))\r\n                        }}\r\n                    >\r\n                        {({values, isSubmitting, errors}) => (\r\n                            <Form>\r\n                                <CustomCheckboxes name=\"competences\" value=\"A-skills\" type=\"checkbox\" label=\"A-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"B-skills\" type=\"checkbox\" label=\"B-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"C-skills\" type=\"checkbox\" label=\"C-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"D-skills\" type=\"checkbox\" label=\"D-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"E-skills\" type=\"checkbox\" label=\"E-skills\"/>\r\n                                <Button disabled={isSubmitting} type=\"submit\">Get Applications</Button>\r\n                                <div>\r\n                                    <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                    <pre>{JSON.stringify(errors, null, 2)}</pre>\r\n                                </div>\r\n                            </Form>\r\n\r\n                        )}\r\n                    </Formik>\r\n                    {(result.length > 0) ? <ApplicationList applications={result}/> : \"\"}\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminApplications;","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Authentication.js",["80","81","82","83","84","85","86","87","88"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationList.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Actions\\testLogInLocalStorage.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\UserReducer.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\index.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationElement.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":26,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":5,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":15,"column":8,"nodeType":"103","endLine":15,"endColumn":10,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":18,"column":60,"nodeType":"103","endLine":18,"endColumn":62,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"108","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":58,"column":80,"nodeType":"111","messageId":"112","endLine":58,"endColumn":81},{"ruleId":"93","severity":1,"message":"107","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"113","line":3,"column":28,"nodeType":"95","messageId":"96","endLine":3,"endColumn":34},{"ruleId":"93","severity":1,"message":"114","line":3,"column":36,"nodeType":"95","messageId":"96","endLine":3,"endColumn":44},{"ruleId":"93","severity":1,"message":"115","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"116","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":15},{"ruleId":"93","severity":1,"message":"108","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":13},{"ruleId":"101","severity":1,"message":"117","line":28,"column":8,"nodeType":"103","endLine":28,"endColumn":20,"suggestions":"118"},{"ruleId":"93","severity":1,"message":"119","line":132,"column":29,"nodeType":"95","messageId":"96","endLine":132,"endColumn":32},{"ruleId":"93","severity":1,"message":"120","line":133,"column":29,"nodeType":"95","messageId":"96","endLine":133,"endColumn":34},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'role'. Either include them or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. If 'setExpertice' needs the current value of 'model', you can also switch to useReducer instead of useState and read 'model' in the reducer.",["124"],"'Field' is defined but never used.","'axios' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Select' is defined but never used.","'MenuItem' is defined but never used.","'UserReducer' is defined but never used.","'ApiCall' is defined but never used.","React Hook useEffect has a missing dependency: 'role'. Either include it or remove the dependency array.",["125"],"'obj' is assigned a value but never used.","'param' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"126","fix":"130"},"Update the dependencies array to be: [isLoggedIn, role]",{"range":"131","text":"132"},"Update the dependencies array to be: [model]",{"range":"133","text":"134"},{"range":"135","text":"132"},[570,572],"[isLoggedIn, role]",[713,715],"[model]",[1086,1098]]