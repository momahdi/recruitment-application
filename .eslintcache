[{"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\index.js":"1","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\App.js":"2","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\reportWebVitals.js":"3","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\apiCall.js":"4","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\model.js":"5","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Presenter\\expertise.js":"6","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\firstView.js":"7","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\expertiseView.js":"8","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\SignUpAdmin.js":"9","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Authentication.js":"10","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\AdminApplications.js":"11","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationList.js":"12","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationElement.js":"13","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\index.js":"14","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\index.js":"15","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\UserReducer.js":"16","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Actions\\testLogInLocalStorage.js":"17","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Header.js":"18"},{"size":884,"mtime":1614093047200,"results":"19","hashOfConfig":"20"},{"size":1603,"mtime":1614160440507,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1613985020202,"results":"22","hashOfConfig":"20"},{"size":1695,"mtime":1614165490153,"results":"23","hashOfConfig":"20"},{"size":987,"mtime":1613985020199,"results":"24","hashOfConfig":"20"},{"size":2701,"mtime":1614159779998,"results":"25","hashOfConfig":"20"},{"size":567,"mtime":1614006592370,"results":"26","hashOfConfig":"20"},{"size":2252,"mtime":1614159779990,"results":"27","hashOfConfig":"20"},{"size":2117,"mtime":1614077407880,"results":"28","hashOfConfig":"20"},{"size":10306,"mtime":1614170787393,"results":"29","hashOfConfig":"20"},{"size":4214,"mtime":1614170787399,"results":"30","hashOfConfig":"20"},{"size":890,"mtime":1614093047197,"results":"31","hashOfConfig":"20"},{"size":1577,"mtime":1614158461023,"results":"32","hashOfConfig":"20"},{"size":553,"mtime":1614093047194,"results":"33","hashOfConfig":"20"},{"size":149,"mtime":1614093047194,"results":"34","hashOfConfig":"20"},{"size":1252,"mtime":1614093047193,"results":"35","hashOfConfig":"20"},{"size":321,"mtime":1614160521820,"results":"36","hashOfConfig":"20"},{"size":673,"mtime":1614093047198,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1b2pc40",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\index.js",[],["79","80"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\App.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\reportWebVitals.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\apiCall.js",["81"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\model.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Presenter\\expertise.js",["82","83"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\firstView.js",[],["84","85"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\expertiseView.js",["86","87"],"import React, {useState} from 'react';\r\nimport UserReducer from \"../Model/Redux/Reducers/UserReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nconst ExpertiseView = ({myExpertise, removeExpertise}) => (\r\n    <div>\r\n        {myExpertise.map(e => \r\n            <tbody>\r\n                <tr key={e.name + e.year}>\r\n                    <td>{e.name}</td>\r\n                    <td>{e.year}</td>\r\n                </tr>\r\n                <button onClick={() => removeExpertise(e.name)}>remove</button>\r\n            </tbody>\r\n            )}\r\n    </div>\r\n);\r\n\r\n\r\n\r\nconst AddExpertiseForm = ({expertise, addExpertise, done, removeOption}) => {\r\n\r\n    const userInfo = useSelector(state => state.UserReducer.userInfo)\r\n    console.log(userInfo)\r\n    const handleSubmit = () => {\r\n        let ans = window.confirm(\"Are you sure you want to submit your application?\");\r\n        if(ans === true){\r\n            done({start: start, end: end, fname: userInfo.fname, lname: userInfo.lname, status: \"unhandled\", dateOfBorth:userInfo.dateOfBirth});\r\n        }\r\n    }\r\n\r\n    const [year, setYear] = React.useState(0);\r\n    const [type, setType] = React.useState('');\r\n    const [start, setStart] = React.useState(\"\");\r\n    const [end, setEnd] = React.useState(\"\");\r\n    return (\r\n        <div>\r\n            <input type=\"number\" min=\"0\" placeholder=\"years of experience\" onChange={(event) => setYear(event.target.value)} />\r\n            <select onChange={(event) => setType(event.target.value)}>\r\n                <option>choose your expertise</option>\r\n                {expertise.map((k) => <option key={k}>{k}</option>)}\r\n            </select>\r\n            <button onClick={() => {addExpertise(type, year); removeOption(type)}}>add skill to application</button>\r\n\r\n            <div>\r\n                <br/>\r\n                <input type=\"number\" min=\"0\" placeholder=\"available start period\" onChange={(event)=>{ setStart(event.target.value) }} />\r\n                <input type=\"number\" min=\"0\" placeholder=\"available end period\" onChange={(event)=>{ setEnd(event.target.value) }}/>\r\n                <button onClick={() => handleSubmit()}>confirm and send application</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {ExpertiseView, AddExpertiseForm}; \r\n","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\SignUpAdmin.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Authentication.js",["88","89","90","91","92","93","94","95","96"],"import React, {useEffect, useState} from 'react'\r\nimport {Field, Form, Formik, useField} from \"formik\";\r\nimport {TextField, Button, Select, MenuItem} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UserReducer from \"../Model/Redux/Reducers/UserReducer\";\r\nimport {testing} from \"../Model/Redux/Actions/testLogInLocalStorage\";\r\nimport ApiCall from \"../Model/apiCall\";\r\nimport axios from \"axios\";\r\nconst Authentication = ({apiCall}) => {\r\n\r\n    //hooks\r\n    const [authStatus, setAuthStatus] = useState(\"Sign up\");\r\n    const [changeAuthStatus, setChangeAuthStatus] = useState(\"Login\");\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n   useEffect(()=>{\r\n        if(role === \"client\"){\r\n            window.location = \"/user/application\";\r\n\r\n        }else if(role === \"admin\"){\r\n            window.location = \"/admin/applications\";\r\n\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n\r\n// let param = auth/login\r\n\r\n    //custom Formik components\r\n    const AuthTextField = ({\r\n                               placeholder,\r\n                               ...props\r\n                           }) => {\r\n        const [field, meta] = useField(props);\r\n        const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n        return (\r\n            <TextField\r\n                placeholder={placeholder}\r\n                {...field}\r\n                helperText={errorText}\r\n                error={!!errorText}//casting string to boolean\r\n                type={props.type}\r\n            />\r\n        )\r\n    }\r\n    //yup schema\r\n    const AuthSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .min(6, 'Too Short!')\r\n            .required('Required')\r\n            .email('Invalid email'),\r\n        password: Yup.string()\r\n            .min(6, 'Too Short!')\r\n            .required('Required'),\r\n        firstName: (authStatus === \"Login\")\r\n            ? Yup.string()\r\n            : Yup.string()\r\n                .required('Required'),\r\n        lastName: (authStatus === \"Login\")\r\n            ? Yup.string()\r\n            : Yup.string()\r\n                .required('Required'),\r\n        dateOfBirth: Yup.array()\r\n            .of(\r\n                Yup.object().shape({\r\n                    year: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : Yup.number().required('Required'),\r\n                    month: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : (Yup.number()\r\n                            .min(1, \"must be between 1 and 12\")\r\n                            .max(12, \"must be between 1 and 31\")\r\n                            .required('Required')),\r\n                    day: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : Yup.number()\r\n                            .min(1, \"must be between 1 and 31\")\r\n                            .max(31, \"must be between 1 and 31\")\r\n                            .required('Required'),\r\n                })\r\n            )\r\n    })\r\n\r\n    //event handlers\r\n    const handleAuthStatusChange = () => {\r\n        if (authStatus === \"Login\") {\r\n            setAuthStatus(\"Sign up\")\r\n            setChangeAuthStatus(\"Login\")\r\n        } else {\r\n            setAuthStatus(\"Login\")\r\n            setChangeAuthStatus(\"Sign up\")\r\n        }\r\n    }\r\n\r\n    const changeView = (url) => {\r\n        window.location = url\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn\r\n                ?<div>\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        dateOfBirth: [{year: \"\", month: \"\", day: \"\"}]\r\n                    }}\r\n                    onSubmit={(data, {setSubmitting, resetForm}) => {\r\n                        setSubmitting(true);\r\n                        resetForm();\r\n                        //TODO uncomment this and use real actions with dispatch (call api from within actions)\r\n                        /*switch(authStatus){\r\n                            case \"Login\":\r\n                            dispatch()//to action that handles login\r\n                            break;\r\n                            case \"Sign up\":\r\n                            dispatch()//to action that handles signup\r\n                            break;\r\n                            default:\r\n                            break;\r\n                        }\r\n                         */\r\n                        let obj = {email: \"test@kth.se\", password:\"test\"};\r\n                        let param = \"auth/login\";\r\n                        /*\r\n                        apiCall.apiCallPost(obj, param)\r\n                            .then(response => {console.log(response);apiCall.apiCallGet(\"posts\").then(response => (console.log(response)))\r\n                                .catch(error => console.log(error)) })\r\n                            .catch(error => console.log( error))\r\n\r\n                         */\r\n                        /*\r\n                            withCredentials: true,\r\n                            credentials: 'same-origin',\r\n                            old url: baseURL: \"https://restapikth.herokuapp.com/\",\r\n                            local: baseURL: \"http://localhost:3001/\",\r\n\r\n                         */\r\n                        const instance = axios.create({\r\n                            baseURL: \"https://restapikth.herokuapp.com/\",\r\n                            withCredentials: true,\r\n                            credentials: 'include',\r\n                            headers: {\r\n                                'Access-Control-Allow-Origin' : '*',\r\n                                'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                            }\r\n                        });\r\n                        instance.post('auth/login', {\r\n                            email: 'test@kth.se',\r\n                            password: 'test'\r\n                        })\r\n                            .then((response) => {\r\n                                console.log(response.headers[\"set-cookie\"]);\r\n                                console.log(response)\r\n                                console.log(document.cookie)\r\n\r\n\r\n                                dispatch(testing())\r\n                               // instance.get(\"posts\").then(r =>console.log(r) )\r\n                            }, (error) => {\r\n                                console.log(error);\r\n                            });\r\n\r\n                        //;//testing remove this when the TODO above is done\r\n\r\n\r\n                        console.log(\"submit:\", data);\r\n                        setSubmitting(false);\r\n                    }}\r\n                    //validationSchema={AuthSchema}//TODO UNCOMMENT THIS TO GET VALIDATION BACK\r\n\r\n                >\r\n                    {({values, isSubmitting, resetForm, errors}) => (\r\n                        <Form>\r\n                            <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                />\r\n                            </div>\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"First Name\"\r\n                                    name=\"firstName\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Year\"\r\n                                    name=\"dateOfBirth[0].year\"\r\n                                    type=\"number\"\r\n                                />\r\n                                <AuthTextField\r\n                                    placeholder=\"Month\"\r\n                                    name=\"dateOfBirth[0].month\"\r\n                                    type=\"number\"\r\n                                />\r\n                                <AuthTextField\r\n                                    placeholder=\"Day\"\r\n                                    name=\"dateOfBirth[0].day\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            <div>\r\n                                <Button disabled={isSubmitting} type=\"submit\">{authStatus}</Button>\r\n                            </div>\r\n\r\n                            <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                            <pre>{JSON.stringify(errors, null, 2)}</pre>\r\n\r\n\r\n                            <div onClick={() => {\r\n                                handleAuthStatusChange();\r\n                                resetForm()\r\n                            }}>{changeAuthStatus}</div>\r\n                        </Form>\r\n                    )}\r\n\r\n\r\n                </Formik>\r\n                <div onClick={() => {\r\n                    changeView(\"/admin/signup\")\r\n                }}>sign up new admin\r\n                </div>\r\n\r\n            </div>\r\n            :\"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Authentication;","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\AdminApplications.js",["97","98"],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationList.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\ApplicationElement.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\index.js",["99","100","101"],"import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { AllReducers } from \"./Reducers\"\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, AllReducers)\r\n\r\n\r\nexport const ReduxStore = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const Persistor = persistStore(ReduxStore)\r\n","D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\index.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Reducers\\UserReducer.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Model\\Redux\\Actions\\testLogInLocalStorage.js",[],"D:\\School\\SPARAKTH\\arkitektur-IV1201\\frontend\\Recruitment-application\\src\\Views\\Header.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":4,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":16,"column":8,"nodeType":"112","endLine":16,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":22,"column":60,"nodeType":"112","endLine":22,"endColumn":62,"suggestions":"115"},{"ruleId":"102","replacedBy":"116"},{"ruleId":"104","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":3,"column":28,"nodeType":"120","messageId":"121","endLine":3,"endColumn":34},{"ruleId":"118","severity":1,"message":"125","line":3,"column":36,"nodeType":"120","messageId":"121","endLine":3,"endColumn":44},{"ruleId":"118","severity":1,"message":"122","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":19},{"ruleId":"118","severity":1,"message":"126","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":15},{"ruleId":"110","severity":1,"message":"127","line":28,"column":8,"nodeType":"112","endLine":28,"endColumn":20,"suggestions":"128"},{"ruleId":"118","severity":1,"message":"129","line":51,"column":11,"nodeType":"120","messageId":"121","endLine":51,"endColumn":21},{"ruleId":"118","severity":1,"message":"130","line":131,"column":29,"nodeType":"120","messageId":"121","endLine":131,"endColumn":32},{"ruleId":"118","severity":1,"message":"131","line":132,"column":29,"nodeType":"120","messageId":"121","endLine":132,"endColumn":34},{"ruleId":"118","severity":1,"message":"123","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":63,"column":80,"nodeType":"134","messageId":"135","endLine":63,"endColumn":81},{"ruleId":"118","severity":1,"message":"136","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"137","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":33},{"ruleId":"118","severity":1,"message":"138","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'role'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. If 'setExpertice' needs the current value of 'model', you can also switch to useReducer instead of useState and read 'model' in the reducer.",["142"],["139"],["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UserReducer' is defined but never used.","'Field' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'ApiCall' is defined but never used.","React Hook useEffect has a missing dependency: 'role'. Either include it or remove the dependency array.",["143"],"'AuthSchema' is assigned a value but never used.","'obj' is assigned a value but never used.","'param' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'thunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},"Update the dependencies array to be: [isLoggedIn, role]",{"range":"149","text":"150"},"Update the dependencies array to be: [model]",{"range":"151","text":"152"},{"range":"153","text":"150"},[636,638],"[isLoggedIn, role]",[785,787],"[model]",[1078,1090]]